// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Home row mods macro
#define HRML(k1,k2,k3,k4) &ht LSHFT k1  &ht LALT k2  &ht LCTRL k3  &ht LGUI k4
#define HRMR(k1,k2,k3,k4) &ht RGUI k1  &ht RCTRL k2  &ht RALT k3  &ht RSHFT k4

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;  // now we pass both hold and tap in the keymap
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
        };

        // Tap-dance definitions for uppercase on double tap
        td_a: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp A &mt LSHFT A>;
        };
        td_b: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp B &mt LSHFT B>;
        };
        td_c: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp C &mt LSHFT C>;
        };
        td_d: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp D &mt LSHFT D>;
        };
        td_e: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp E &mt LSHFT E>;
        };
        td_f: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp F &mt LSHFT F>;
        };
        td_g: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp G &mt LSHFT G>;
        };
        td_h: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp H &mt LSHFT H>;
        };
        td_i: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp I &mt LSHFT I>;
        };
        td_j: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp J &mt LSHFT J>;
        };
        td_k: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp K &mt LSHFT K>;
        };
        td_l: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp L &mt LSHFT L>;
        };
        td_m: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp M &mt LSHFT M>;
        };
        td_n: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp N &mt LSHFT N>;
        };
        td_o: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp O &mt LSHFT O>;
        };
        td_p: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp P &mt LSHFT P>;
        };
        td_q: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp Q &mt LSHFT Q>;
        };
        td_r: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp R &mt LSHFT R>;
        };
        td_s: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp S &mt LSHFT S>;
        };
        td_t: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp T &mt LSHFT T>;
        };
        td_u: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp U &mt LSHFT U>;
        };
        td_v: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp V &mt LSHFT V>;
        };
        td_w: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp W &mt LSHFT W>;
        };
        td_x: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp X &mt LSHFT X>;
        };
        td_y: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp Y &mt LSHFT Y>;
        };
        td_z: tap_dance {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp Z &mt LSHFT Z>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_backspace {
            timeout-ms = <50>;
            key-positions = <1 3>; // keys for s and f
            bindings = <&kp BSPC>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &ht LSHFT &td_a
                &ht LALT  &td_s
                &ht LCTRL &td_d
                &ht RALT  &td_f
                &ht RCTRL &td_g
            >;
        };
    };
};
